<Application x:Class="NiceHashMiner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:NiceHashMiner"
             xmlns:views="clr-namespace:NiceHashMiner.Views"
             xmlns:login="clr-namespace:NiceHashMiner.Views.Login"
             xmlns:converters="clr-namespace:NiceHashMiner.Converters"
             Startup="App_OnStartup"
             DispatcherUnhandledException="App_DispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Xaml/Colors/Colors.xaml"/>
                <ResourceDictionary Source="Resources/Xaml/Controls/Controls.xaml"/>
                <ResourceDictionary Source="Resources/Xaml/Brushes.xaml"/>
                <ResourceDictionary Source="Resources/Xaml/Fonts/Fonts.xaml"/>
                <ResourceDictionary Source="Resources/Xaml/NHMLogos.xaml"/>
                <!--windows styles-->
                <ResourceDictionary Source="Views/Common/NHBase/NHBaseWindowStyles.xaml"/>
                <ResourceDictionary Source="Views/Common/NHBase/NHMMainWindowStyle.xaml"/>
                <!--tooltips-->
                <ResourceDictionary Source="Resources/Xaml/Tooltips.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!--#region Dynamic Theme Properties-->
            <DrawingBrush x:Key="NHMLogo" Drawing="{DynamicResource NHMLogoLight}" />
            <DrawingBrush x:Key="NHMBigLogo" Drawing="{DynamicResource NHMLogoBigLight}" />

            <DrawingBrush x:Key="QrLightLogo" Drawing="{DynamicResource QrIconDefault}" />
            <DrawingBrush x:Key="QrDarkLogo" Drawing="{DynamicResource QRIcon}" />

            <DrawingBrush x:Key="TrashDarkLogo" Drawing="{DynamicResource TrashLogo}" />
            <DrawingBrush x:Key="TrashLightLogo" Drawing="{DynamicResource TrashLogoDefault}" />

            <DrawingBrush x:Key="LoginCircle" Drawing="{DynamicResource LoginCircleLogoLight}" />
            <DrawingBrush x:Key="LoginQRCircle" Drawing="{DynamicResource LoginQRCircleLight}" />
            <!--#endregion Dynamic Theme Properties-->

            <Style TargetType="views:EulaWindowFirstLong" BasedOn="{StaticResource BaseDialogWindowStyle}"/>
            <Style TargetType="views:ChooseLanguageWindow" BasedOn="{StaticResource BaseDialogWindowStyle}"/>
            <Style TargetType="views:EulaWindowSecondShort" BasedOn="{StaticResource BaseDialogWindowStyle}"/>
            <Style TargetType="views:QuickMinerAddressMigrationWindow" BasedOn="{StaticResource BaseDialogWindowStyle}"/>
            <!--comment out if no login-->
            <Style TargetType="login:LoginWindow" BasedOn="{StaticResource BaseDialogWindowStyle}"/>
            <Style TargetType="views:DemoBTCNotice" BasedOn="{StaticResource BaseDialogWindowStyle}"/>
            <Style TargetType="views:SingleInstanceNotice" BasedOn="{StaticResource BaseDialogWindowStyle}"/>
            <Style TargetType="{x:Type views:MainWindow}" BasedOn="{StaticResource NHMMainWindowStyle}"/>


            <!--#region MiningDevices panel-->

            <SolidColorBrush x:Key="MiningDevices.Warning" Color="{StaticResource Colors.Dark.Basic.MainColor}" />
            <SolidColorBrush x:Key="MiningDevices.Good" Color="{StaticResource Colors.Dark.Basic.SuccessColor}" />
            <SolidColorBrush x:Key="MiningDevices.Error" Color="{StaticResource Colors.Dark.Basic.WarningColor}" />

            <SolidColorBrush x:Key="MiningDevices" Color="{DynamicResource Colors.Dark.Basic.MainColor}" />

            <SolidColorBrush x:Key="MiningDevicesBackground.Warning" Color="{StaticResource Colors.Dark.Basic.NO_NAME}" />
            <SolidColorBrush x:Key="MiningDevicesBackground.Good" Color="{StaticResource Colors.Dark.Basic.SuccessColorBckg}" />
            <SolidColorBrush x:Key="MiningDevicesBackground.Error" Color="{StaticResource Colors.Dark.Basic.WarningColorBckg}" />

            <SolidColorBrush x:Key="MiningDevicesBackground" Color="{StaticResource Colors.Dark.Basic.NO_NAME}" />

            <!--#endregion MiningDevices panel-->

            <!--#region base sytles-->
            <Style TargetType="{x:Type TextBlock}" x:Key="BaseUbuntuTextBlock">
                <Setter Property= "FontFamily" Value="{StaticResource UbuntuFontFamily}"/>
                <Setter Property= "FontStyle" Value="Normal"/>
                <Setter Property= "FontStretch" Value="Normal"/>
                <Setter Property= "FontWeight" Value="Normal"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="BaseUbuntuTextBlockBold" BasedOn="{StaticResource BaseUbuntuTextBlock}">
                <Setter Property= "FontWeight" Value="Bold"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="BaseUbuntuTextBlockMedium" BasedOn="{StaticResource BaseUbuntuTextBlock}">
                <Setter Property= "FontWeight" Value="Medium"/>
            </Style>
            <!--#endregion base sytles-->

            <!--#region common buttons-->

            <!--Start Stop buttons-->
            <Style TargetType="{x:Type Button}" x:Key="StartStopButton">
                <Setter Property="MaxHeight" Value="24"/>
                <Setter Property="MaxWidth" Value="23.2"/>
                <Setter Property="MinHeight" Value="24"/>
                <Setter Property="MinWidth" Value="23.2"/>

                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>

                <Setter Property="Background" Value="#FFFFFF"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Background" Value="{ DynamicResource BackgroundColor }" />
                        <Setter Property="BorderBrush" Value="{ DynamicResource BorderColor }" />
                        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush }" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{ DynamicResource PrimaryColorBrush }" />
                        <Setter Property="BorderBrush" Value="{ DynamicResource BorderColor }" />
                        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush }" />
                    </Trigger>

                </Style.Triggers>

                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="4" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Style>

                </Style.Resources>
            </Style>
            <!--#region start/stop button styles-->

            <Style TargetType="{x:Type TextBlock}" x:Key="StartStopTextBlock">
                <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="{StaticResource RedDangerColorBrush}" />
                <Style.Triggers>
                    <Trigger Property ="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource Gray1ColorBrush}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"  Value="True">
                        <Setter Property="Foreground" Value="White"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!--#endregion common buttons-->
            <Style TargetType="TextBlock" x:Key="InfoIcon" >
                <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Text" Value="&#xF05A;" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style TargetType="TextBlock" x:Key="CheckIcon" >
                <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="{StaticResource SuccessBgColorBrush}" />
                <Setter Property="Text" Value="&#xf00c;" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style TargetType="TextBlock" x:Key="AlertIcon" >
                <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="{StaticResource RedDangerColorBrush}" />
                <Setter Property="Text" Value="&#xf071;" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style TargetType="TextBlock" x:Key="GreenCircle">
                <Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Foreground" Value="{StaticResource NastyGreenBrush}" />
                <Setter Property="Text" Value="&#xf111;" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <converters:NulBoolToVisibilityConverter x:Key="NulBoolToVisibilityConverter" />
            <converters:NulBoolToVisibilityConverterFalse x:Key="NulBoolToVisibilityConverterFalse" />
            <converters:NumberToVisibilityConverter x:Key="NumberToVisibilityConverter" />
            <converters:NumberToVisibilityConverterZero x:Key="NumberToVisibilityConverterZero" />
            <converters:BooleanDaysToStringConverter x:Key="BooleanDaysToStringConverter" />
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
            <converters:IsPluginExcavatorToVisibilityConverter x:Key="IsPluginExcavatorToVisibilityConverter" />
            <converters:IsPluginExcavatorToVisibilityConverterNot x:Key="IsPluginExcavatorToVisibilityConverterNot" />

        </ResourceDictionary>
    </Application.Resources>
</Application>
